# METABEGIN
# X-Env-Layer-Name: network
# X-Env-Layer-Category: layer
# X-Env-Layer-Desc: Configures Ethernet + Wi-Fi network with AP mode and DHCP server on Raspberry Pi
# X-Env-Layer-Requires: login
# METAEND
---
mmdebstrap:
  packages:
    - network-manager
    - dnsmasq
    - hostapd
    - wpasupplicant
    - iptables
    - iw
    - lsof
    - net-tools

  customize-hooks:
    # Enable NetworkManager at boot
    - |-
      chroot $1 sh -c "
        systemctl stop systemd-resolved
        systemctl disable systemd-resolved
        systemctl mask systemd-resolved
        systemctl enable NetworkManager

        rm -f /etc/resolv.conf
        echo 'nameserver 1.1.1.1' > /etc/resolv.conf
      "

    # Update dnsmasq default config to ignore resolvconf and exclude lo
    - |-
      sed -i 's/#IGNORE_RESOLVCONF=yes/IGNORE_RESOLVCONF=yes/' $1/etc/default/dnsmasq
      sed -i 's/#DNSMASQ_EXCEPT=\"lo\"/DNSMASQ_EXCEPT=\"lo\"/' $1/etc/default/dnsmasq

    # Create dnsmasq configuration
    - |-
      cat <<'EOF' > $1/etc/dnsmasq.conf
      interface=wlan0
      dhcp-range=192.168.50.10,192.168.50.100,12h
      dhcp-option=option:router,192.168.50.1

      interface=eth0
      dhcp-range=192.168.60.10,192.168.60.100,12h
      dhcp-option=option:router,192.168.60.1

      address=/digilink.lan/192.168.50.1
      address=/config.lan/192.168.50.1
      address=/backend.lan/192.168.50.1
      EOF

    # Create hostapd configuration
    - |-
      cat <<EOF > $1/etc/hostapd/hostapd.conf
      interface=wlan0
      driver=nl80211
      ssid=DigiLinkOnPremDemo
      hw_mode=g
      channel=6
      auth_algs=1
      ignore_broadcast_ssid=0
      EOF


    # Add a boot-time setup script for NetworkManager connections
    - |-
      cat <<'EOF' > $1/usr/local/bin/setup-network.sh
      #!/bin/bash
      set -e

      echo "[setup-network] Configuring NetworkManager..."

      # Enable Wi-Fi radio
      nmcli radio wifi on || true

      # Ethernet on 192.168.60.0/24
      nmcli con add type ethernet ifname eth0 con-name eth0-ethernet-static ipv4.addresses 192.168.60.1/24 ipv4.method manual

      # Wi-Fi Access Point on 192.168.50.0/24
      nmcli con add type wifi ifname wlan0 con-name wlan0-wifi-static autoconnect yes ssid DigiLinkOnPremDemo mode ap
      nmcli con modify wlan0-wifi-static ipv4.addresses 192.168.50.1/24 ipv4.method manual

      # Enable essential services
      systemctl unmask hostapd
      systemctl enable hostapd 
      systemctl enable dnsmasq

      sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
      sysctl -p

      echo "[setup-network] Done."
      EOF

      chmod +x $1/usr/local/bin/setup-network.sh

    # Add a systemd one-shot service that runs setup-network.sh once on first boot
    - |-
      cat <<'EOF' > $1/etc/systemd/system/setup-network.service
      [Unit]
      Description=Initial NetworkManager configuration
      After=NetworkManager.service
      ConditionPathExists=!/var/lib/setup-network.done

      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/setup-network.sh
      ExecStartPost=/bin/touch /var/lib/setup-network.done

      [Install]
      WantedBy=multi-user.target
      EOF

      chroot $1 sh -c "systemctl enable setup-network.service"
